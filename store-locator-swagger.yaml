swagger: "2.0"
info:
  description: "This is a REST API application for Creating/Updating/Deleting/Searching store details.The store details are saved in a json file inside the spring boot application.The application also supports filtering of stores on the basis of location,country,within a defined radius and currently open.
  If authentication is enabled, when calling the APIs use api-key:testapikey to authenticate"
  version: "1.0.0"
  title: "Store Locator API"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "rajeshsnair@gmail.com"

  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:9900"
basePath: "/storelocator"
tags:
- name: "Store Locator"
  description: "Store Locator base url: /storelocator"
 
paths:
  /stores:
    post:
      tags:
      - "store-locator-controller"
      summary: "create a or multiple store(s) with store details"
      description: ""
      operationId: "addStore"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Stores object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Stores"
      responses:
        "405":
          description: "Invalid input"
      security:
      - api_key: []
      

  /stores/{store-id}:
    put:
      tags:
      - "store-locator-controller"
      summary: "Update an existing Store"
      description: ""
      operationId: "updateStore"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "store-id"
        in: "path"
        description: "ID of the order that needs to be deleted"
        required: true
        type: "integer"
        minimum: 1.0
        format: "int64" 
      - in: "body"
        name: "body"
        description: "Store object that needs to be updated to the list of stores"
        required: true
        schema:
          $ref: "#/definitions/Stores"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Store not found"
        "405":
          description: "Validation exception"
      security:
      - api_key: []
      
  /stores/:
    get:
      tags:
      - "store-locator-controller"
      summary: "Finds All Stores with Store Details"
      description: "Multiple status values can be provided with comma separated strings"
      operationId: "getStores"
      produces:
        - "application/json"
      
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Stores"
        "400":
          description: "Bad Request"
      security:
       - api_key: []
       
  /stores/city:
    get:
      tags:
      - "store-locator-controller"
      summary: "Finds Store by City"
      description: "Find list of stores in a particular City"
      operationId: "getStores?city"
      produces:
      - "application/json"
      parameters:
      - name: "city"
        in: "query"
        description: "Tags to filter by"
        required: true
        type: "string"
        
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Stores"
        "400":
          description: "Invalid city value"
      security:
        - api_key: []
      
  /stores/country:
    get:
      tags:
      - "store-locator-controller"
      summary: "Find Store by Country"
      description: "Finds list of Stores in a particular country"
      operationId: "getStores?country"
      produces:
      - "application/json"
      parameters:
      - name: "country"
        in: "query"
        description: "country to be searched"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Stores"
        "400":
          description: "Bad Request"
        "404":
          description: "Stores not found"
      security:
      - api_key: []
      
  /stores/current:
    get:
      tags:
      - "store-locator-controller"
      summary: "Find Store which are open currently"
      description: "Finds list of Stores at current time"
      operationId: "getStores?current"
      produces:
      - "application/json"
      parameters:
      - name: "current"
        in: "query"
        description: "To search currently open stores"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Stores"
        "400":
          description: "Bad Request"
        "404":
          description: "Stores not found"
      security:
      - api_key: []  
  
  /stores/radius:
    get:
      tags:
      - "store-locator-controller"
      summary: "Find Store which are within radius(uom) from given loc or lat & long"
      description: "Find store which are within radius (given in uom - kms or miles) from given location or from the latitude & longitude co-ordinates"
      operationId: "getStores?radius&location"
      produces:
      - "application/json"
      parameters:
      - name: "radius"
        in: "query"
        description: "radius for searching stores"
        required: true
        type: "integer"
      
      - name: "location"
        in: "query"
        description: "current location searching stores"
        required: true
        type: "integer" 
        
      - name: "longitude"
        in: "query"
        description: "current longitude coordinates"
        required: true
        type: "integer"
        
      - name: "latitude"
        in: "query"
        description: "current latitude coordinates"
        required: true
        type: "integer"  
      
      - name: "uom"
        in: "query"
        description: "unit of measurement kms or miles"
        required: true
        type: "string"  
        
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Stores"
        "400":
          description: "Bad Request"
        "404":
          description: "Stores not found"
      security:
      - api_key: []  
      
  /stores/<store_id>:    
    delete:
      tags:
      - "store-locator-controller"
      summary: "Delete a Store by Store Id"
      description: "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors"
      operationId: "deleteStore"
      produces:
      - "application/json"
      parameters:
      - name: "store_id"
        in: "query"
        description: "ID of the Store that needs to be deleted"
        required: true
        type: "integer"
        minimum: 1.0
        format: "int64"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Store not found"
  
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "api-key"
    in: "header"
    
"definitions": {
    "Location": {
      "type": "object",
      "properties": {
        "LAT": {
          "type": "string"
        },
        "LNG": {
          "type": "string"
        }
      },
      "title": "Location"
    },
    
    "Stlocattr": {
      "type": "object",
      "properties": {
        "LANGUAGE_ID": {
          "type": "integer",
          "format": "int32"
        },
        "OPENINGHOURS": {
          "type": "string"
        }
      },
      "title": "Stlocattr"
    },
    "Store": {
      "type": "object",
      "properties": {
        "ADDRESS1": {
          "type": "string"
        },
        "CITY": {
          "type": "string"
        },
        "COUNTRY": {
          "type": "string"
        },
        "COUNTRYCODE": {
          "type": "string"
        },
        "LOCATION": {
          "$ref": "#/definitions/Location"
        },
        "PHONE": {
          "type": "string"
        },
        "STLOCATTR": {
          "$ref": "#/definitions/Stlocattr"
        },
        "STORE_ID": {
          "type": "integer",
          "format": "int32"
        },
        "STORE_NAME": {
          "type": "string"
        },
        "ZIPCODE": {
          "type": "string"
        }
      },
      "title": "Store"
    },
    "Stores": {
      "type": "object",
      "properties": {
        "stores": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Store"
          }
        }
      },
      "title": "Stores"
    },
    "View": {
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string"
        }
      },
      "title": "View"
    }
  }